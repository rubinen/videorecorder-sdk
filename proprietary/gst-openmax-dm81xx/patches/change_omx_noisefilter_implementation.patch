Index: gst-openmax-dm81xx/src/omx/gstomx_noisefilter.c
===================================================================
--- gst-openmax-dm81xx.orig/src/omx/gstomx_noisefilter.c	2013-12-09 14:44:26.000000000 -0600
+++ gst-openmax-dm81xx/src/omx/gstomx_noisefilter.c	2013-12-26 10:08:06.878013867 -0600
@@ -76,13 +76,37 @@
     GstCaps *caps;    
     GstOmxBaseVfpc *self;
     GstStructure *struc;
-
+	int width, height;
     self = GST_OMX_BASE_VFPC (omx_base);
+	caps = gst_pad_peer_get_caps (omx_base->srcpad);
+
+
+    if (NULL == caps || gst_caps_is_empty (caps))
+    {
+        width = self->in_width;
+        height = self->in_height;
+    }
+    else
+    {
+        GstStructure *s;
+
+        s = gst_caps_get_structure (caps, 0);
 
+        if (!(gst_structure_get_int (s, "width", &width) &&
+            gst_structure_get_int (s, "height", &height)))
+        {
+            width = self->in_width;
+            height = self->in_height;    
+        }
+    }
+    /* Workaround: Make width multiple of 32, otherwise, scaler crashes */
+  width = (width+31) & 0xFFFFFFE0;
+  height = (height+31) & 0xFFFFFFE0;
+  
     caps = gst_caps_new_empty ();
     struc = gst_structure_new (("video/x-raw-yuv"),
-            "width",  G_TYPE_INT, self->in_width,
-            "height", G_TYPE_INT, self->in_height,
+            "width",  G_TYPE_INT, width,
+            "height", G_TYPE_INT, height,
             "format", GST_TYPE_FOURCC, GST_MAKE_FOURCC ('N', 'V', '1', '2'),
             NULL);
 
@@ -143,12 +167,12 @@
     GST_LOG_OBJECT (self, "Setting port definition (input)");
 
     G_OMX_PORT_GET_DEFINITION (omx_base->in_port, &paramPort);
-    paramPort.format.video.nFrameWidth = self->in_width;
-    paramPort.format.video.nFrameHeight = self->in_height;
-    paramPort.format.video.nStride = self->in_stride;
+    paramPort.format.video.nFrameWidth = (self->in_width+31) & 0xFFFFFFE0;
+    paramPort.format.video.nFrameHeight = (self->in_height+31) & 0xFFFFFFE0;
+    paramPort.format.video.nStride = ((self->in_width+31) & 0xFFFFFFE0)*2;
     paramPort.format.video.eCompressionFormat = OMX_VIDEO_CodingUnused;
     paramPort.format.video.eColorFormat = OMX_COLOR_FormatYCbYCr;
-    paramPort.nBufferSize =  self->in_stride * self->in_height;
+    paramPort.nBufferSize = (paramPort.format.video.nStride * paramPort.format.video.nFrameHeight * 2);
     paramPort.nBufferAlignment = 0;
     paramPort.bBuffersContiguous = 0;
     G_OMX_PORT_SET_DEFINITION (omx_base->in_port, &paramPort);
@@ -158,13 +182,13 @@
     GST_LOG_OBJECT (self, "Setting port definition (output)");
 
     G_OMX_PORT_GET_DEFINITION (omx_base->out_port, &paramPort);
-    paramPort.format.video.nFrameWidth = self->out_width;
-    paramPort.format.video.nFrameHeight = self->out_height;
-    paramPort.format.video.nStride = self->out_stride;
+    paramPort.format.video.nFrameWidth = (self->in_width+31) & 0xFFFFFFE0;
+    paramPort.format.video.nFrameHeight = (self->in_height+31) & 0xFFFFFFE0;
+    paramPort.format.video.nStride = (self->in_width+31) & 0xFFFFFFE0;
     paramPort.format.video.eCompressionFormat = OMX_VIDEO_CodingUnused;
     paramPort.format.video.eColorFormat = OMX_COLOR_FormatYUV420SemiPlanar;
-    paramPort.nBufferSize =  self->out_stride * self->out_height * 1.5;
-    paramPort.nBufferCountActual = 3;
+    paramPort.nBufferSize =  (paramPort.format.video.nStride * paramPort.format.video.nFrameHeight * 3 )>> 1;
+    paramPort.nBufferCountActual = 5;
     paramPort.nBufferAlignment = 0;
     paramPort.bBuffersContiguous = 0;
     G_OMX_PORT_SET_DEFINITION (omx_base->out_port, &paramPort);
@@ -185,14 +209,14 @@
     GST_LOG_OBJECT (self, "Setting channel resolution (input)");
 
     _G_OMX_INIT_PARAM (&chResolution);
-    chResolution.Frm0Width = self->in_width;
-    chResolution.Frm0Height = self->in_height;
-    chResolution.Frm0Pitch = self->in_stride;
+    chResolution.Frm0Width = (self->in_width+31) & 0xFFFFFFE0;
+    chResolution.Frm0Height = (self->in_height+31) & 0xFFFFFFE0;
+    chResolution.Frm0Pitch = ((self->in_width+31) & 0xFFFFFFE0)*2;
     chResolution.Frm1Width = 0;
     chResolution.Frm1Height = 0;
     chResolution.Frm1Pitch = 0;
-    chResolution.FrmStartX = self->left;
-    chResolution.FrmStartY = self->top;
+    chResolution.FrmStartX = 0;
+    chResolution.FrmStartY = 0;
     chResolution.FrmCropWidth = 0;
     chResolution.FrmCropHeight = 0;
     chResolution.eDir = OMX_DirInput;
@@ -206,9 +230,9 @@
     GST_LOG_OBJECT (self, "Setting channel resolution (output)");
 
     _G_OMX_INIT_PARAM (&chResolution);
-    chResolution.Frm0Width = self->out_width;
-    chResolution.Frm0Height = self->out_height;
-    chResolution.Frm0Pitch = self->out_stride;
+    chResolution.Frm0Width = (self->in_width+31) & 0xFFFFFFE0;
+    chResolution.Frm0Height = (self->in_height+31) & 0xFFFFFFE0;
+    chResolution.Frm0Pitch = ((self->in_width+31) & 0xFFFFFFE0);
     chResolution.Frm1Width = 0;
     chResolution.Frm1Height = 0;
     chResolution.Frm1Pitch = 0;
@@ -226,7 +250,7 @@
     _G_OMX_INIT_PARAM (&algEnable);
     algEnable.nPortIndex = 0;
     algEnable.nChId = 0;
-    algEnable.bAlgBypass = OMX_FALSE;
+    algEnable.bAlgBypass = 0;
 
     err = OMX_SetConfig (gomx->omx_handle, (OMX_INDEXTYPE) OMX_TI_IndexConfigAlgEnable, &algEnable);
 
