Index: DirectFB-1.2.0/src/interfaces/IDirectFBImageProvider/idirectfbimageprovider_png.c
===================================================================
--- DirectFB-1.2.0.orig/src/interfaces/IDirectFBImageProvider/idirectfbimageprovider_png.c	2011-03-25 12:22:05.406454177 -0600
+++ DirectFB-1.2.0/src/interfaces/IDirectFBImageProvider/idirectfbimageprovider_png.c	2011-03-25 12:40:56.074448051 -0600
@@ -207,7 +207,7 @@
      if (!data->png_ptr)
           goto error;
 
-     if (setjmp( data->png_ptr->jmpbuf )) {
+     if (setjmp( png_jmpbuf(data->png_ptr) )) {
           D_ERROR( "ImageProvider/PNG: Error reading header!\n" );
           goto error;
      }
@@ -292,7 +292,7 @@
           rect = dst_data->area.wanted;
      }
 
-     if (setjmp( data->png_ptr->jmpbuf )) {
+     if (setjmp( png_jmpbuf(data->png_ptr) )) {
           D_ERROR( "ImageProvider/PNG: Error during decoding!\n" );
 
           if (data->stage < STAGE_IMAGE)
@@ -334,7 +334,8 @@
 
           switch (data->color_type) {
                case PNG_COLOR_TYPE_PALETTE:
-                    if (dst_surface->config.format == DSPF_LUT8 && data->info_ptr->bit_depth == 8) {
+                    if (dst_surface->config.format == DSPF_LUT8 && 
+                        png_get_bit_depth(data->png_ptr,data->info_ptr) == 8) {
                          /*
                           * Special indexed PNG to LUT8 loading.
                           */
@@ -377,7 +378,7 @@
                     }
                     else {
                          if (data->color_type == PNG_COLOR_TYPE_GRAY) {
-                              int num = 1 << data->info_ptr->bit_depth;
+                              int num = 1 << png_get_bit_depth(data->png_ptr,data->info_ptr);
 
                               for (x=0; x<num; x++) {
                                    int value = x * 255 / (num - 1);
@@ -386,7 +387,7 @@
                               }
                          }
 
-                         switch (data->info_ptr->bit_depth) {
+                         switch (png_get_bit_depth(data->png_ptr,data->info_ptr)) {
                               case 8:
                                    for (y=0; y<data->height; y++) {
                                         u8  *S = data->image + data->pitch * y;
@@ -441,7 +442,7 @@
 
                               default:
                                    D_ERROR( "ImageProvider/PNG: Unsupported indexed bit depth %d!\n",
-                                            data->info_ptr->bit_depth );
+                                            png_get_bit_depth(data->png_ptr,data->info_ptr) );
                          }
 
                          dfb_scale_linear_32( image_argb, data->width, data->height,
@@ -599,12 +600,15 @@
           /* generate color key based on palette... */
           if (data->color_type == PNG_COLOR_TYPE_PALETTE) {
                u32        key;
-               png_colorp palette    = data->info_ptr->palette;
-               png_bytep  trans      = data->info_ptr->trans_alpha;
-               int        num_colors = MIN( MAXCOLORMAPSIZE,
-                                            data->info_ptr->num_palette );
+               png_colorp palette;
+               int        num_palette; 
+               png_get_PLTE( data->png_ptr,data->info_ptr,&palette,&num_palette);
+               png_bytep  trans;
+               int        num_trans;
+               int        num_colors = MIN( MAXCOLORMAPSIZE, num_palette );
                u8         cmap[3][num_colors];
 
+               png_get_tRNS(data->png_ptr,data->info_ptr,&trans,&num_trans,NULL);
                for (i=0; i<num_colors; i++) {
                     cmap[0][i] = palette[i].red;
                     cmap[1][i] = palette[i].green;
@@ -613,7 +617,7 @@
 
                key = FindColorKey( num_colors, &cmap[0][0] );
 
-               for (i=0; i<data->info_ptr->num_trans; i++) {
+               for (i=0; i<num_trans; i++) {
                     if (!trans[i]) {
                          palette[i].red   = (key & 0xff0000) >> 16;
                          palette[i].green = (key & 0x00ff00) >>  8;
@@ -625,7 +629,8 @@
           }
           else {
                /* ...or based on trans rgb value */
-               png_color_16p trans = &data->info_ptr->trans_color;
+               png_color_16p trans;
+               png_get_tRNS(data->png_ptr,data->info_ptr,NULL,NULL,&trans);
 
                data->color_key = (((trans->red & 0xff00) << 8) |
                                   ((trans->green & 0xff00)) |
@@ -635,11 +640,14 @@
 
      switch (data->color_type) {
           case PNG_COLOR_TYPE_PALETTE: {
-               png_colorp palette    = data->info_ptr->palette;
-               png_bytep  trans      = data->info_ptr->trans_alpha;
-               int        num_trans  = data->info_ptr->num_trans;
-               int        num_colors = MIN( MAXCOLORMAPSIZE, data->info_ptr->num_palette );
+               png_colorp palette;
+               int        num_palette; 
+               png_get_PLTE( data->png_ptr,data->info_ptr,&palette,&num_palette);
+               png_bytep  trans;
+               int        num_trans;
+               int        num_colors = MIN( MAXCOLORMAPSIZE, num_palette );
 
+               png_get_tRNS(data->png_ptr,data->info_ptr,&trans,&num_trans,NULL);
                for (i=0; i<num_colors; i++) {
                     data->colors[i].a = (i < num_trans) ? trans[i] : 0xff;
                     data->colors[i].r = palette[i].red;
Index: DirectFB-1.2.0/src/tools/directfb-csource.c
===================================================================
--- DirectFB-1.2.0.orig/src/tools/directfb-csource.c	2011-03-25 12:41:19.126458108 -0600
+++ DirectFB-1.2.0/src/tools/directfb-csource.c	2011-03-25 12:47:04.034895336 -0600
@@ -313,6 +313,8 @@
      int            type;
      char           header[8];
      int            bytes, pitch;
+     int            num_palette;
+     png_colorp     ipalette;
 
      dest_format =
        (desc->flags & DSDESC_PIXELFORMAT) ? desc->pixelformat : DSPF_UNKNOWN;
@@ -338,7 +340,7 @@
      if (!png_ptr)
           goto cleanup;
 
-     if (setjmp (png_ptr->jmpbuf)) {
+     if (png_jmpbuf(png_ptr)) {
           if (desc->preallocated[0].data) {
                free (desc->preallocated[0].data);
                desc->preallocated[0].data = NULL;
@@ -404,18 +406,19 @@
                break;
        }
 
+     png_get_PLTE( png_ptr,info_ptr,&ipalette,&num_palette);
      switch (src_format) {
           case DSPF_LUT8:
-               if (info_ptr->num_palette) {
+               if (num_palette) {
                     png_byte *alpha;
                     int       i, num;
 
-                    *palette_size = MIN (info_ptr->num_palette, 256);
+                    *palette_size = MIN (num_palette, 256);
                     for (i = 0; i < *palette_size; i++) {
                          palette[i].a = 0xFF;
-                         palette[i].r = info_ptr->palette[i].red;
-                         palette[i].g = info_ptr->palette[i].green;
-                         palette[i].b = info_ptr->palette[i].blue;
+                         palette[i].r = ipalette[i].red;
+                         palette[i].g = ipalette[i].green;
+                         palette[i].b = ipalette[i].blue;
                     }
                     if (png_get_valid (png_ptr, info_ptr, PNG_INFO_tRNS)) {
                          png_get_tRNS (png_ptr, info_ptr, &alpha, &num, NULL);
Index: DirectFB-1.2.0/src/tools/mkdfiff.c
===================================================================
--- DirectFB-1.2.0.orig/src/tools/mkdfiff.c	2011-03-25 12:47:37.202456652 -0600
+++ DirectFB-1.2.0/src/tools/mkdfiff.c	2011-03-25 12:48:18.122460923 -0600
@@ -97,7 +97,7 @@
      if (!png_ptr)
           goto cleanup;
 
-     if (setjmp (png_ptr->jmpbuf)) {
+     if (setjmp ( png_jmpbuf(png_ptr) )) {
           if (desc->preallocated[0].data) {
                free (desc->preallocated[0].data);
                desc->preallocated[0].data = NULL;
Index: DirectFB-1.2.0/src/tools/mkdgifft.cpp
===================================================================
--- DirectFB-1.2.0.orig/src/tools/mkdgifft.cpp	2011-03-25 12:48:46.610582977 -0600
+++ DirectFB-1.2.0/src/tools/mkdgifft.cpp	2011-03-25 12:49:12.538498922 -0600
@@ -595,7 +595,7 @@
      if (!png_ptr)
           goto cleanup;
 
-     if (setjmp (png_ptr->jmpbuf)) {
+     if (setjmp ( png_jmpbuf(png_ptr) )) {
           if (desc->preallocated[0].data) {
                free (desc->preallocated[0].data);
                desc->preallocated[0].data = NULL;
