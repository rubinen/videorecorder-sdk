#$L$
# Copyright (C) 2008 Ridgerun (http://www.ridgerun.com). 
#
#  This source code has a dual license.  If this file is linked with other
#  source code that has a GPL license, then this file is licensed with a GPL
#  license as described below.  Otherwise the source code contained in this
#  file is property of Ridgerun. This source code is protected under
#  copyright law.
#
#  This program is free software; you can redistribute  it and/or modify it
#  under  the terms of  the GNU General  Public License as published by the
#  Free Software Foundation;  either version 2 of the  License, or (at your
#  option) any later version.
#
#  THIS  SOFTWARE  IS  PROVIDED  ``AS  IS''  AND   ANY  EXPRESS  OR IMPLIED
#  WARRANTIES,   INCLUDING, BUT NOT  LIMITED  TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO  EVENT  SHALL   THE AUTHOR  BE    LIABLE FOR ANY   DIRECT,  INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED   TO, PROCUREMENT OF  SUBSTITUTE GOODS  OR SERVICES; LOSS OF
#  USE, DATA,  OR PROFITS; OR  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
#  ANY THEORY OF LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#  You should have received a copy of the  GNU General Public License along
#  with this program; if not, write  to the Free Software Foundation, Inc.,
#  675 Mass Ave, Cambridge, MA 02139, USA.
#$L$

ifeq ($(DEVDIR),)
$(error ====== DEVDIR variable is empty, invoke this Makefile from the BSP root, or provide the path to it =====)
endif
include $(DEVDIR)/bsp/mach/Make.conf

.PHONY: install installbootloader installmtd installkernel installfs installcmdline installbootcmd headerinstall

#These variables are not on the conf, but the env to allow changes thru the make args
IFACE_NAME?=$(CONFIG_INSTALLER_HOST_NET_INTERFACE)
PORT?=$(CONFIG_INSTALLER_SERIAL_COM_PORT)
export PORT
export NAND_PAGE_SIZE
export NAND_BLOCK_SIZE
export VERBOSE

# only investigate network settings if user is trying to install something
ifeq ($(findstring install,$(MAKECMDGOALS)),install)
ifeq ($(CONFIG_INSTALLER_TFTP_METHOD),y)
HOST_IP ?= $(shell $(DEVDIR)/bsp/scripts/find_ip_address.sh $(IFACE_NAME))
export HOST_IP
ifeq ($(HOST_IP),)
$(error Unable to identify the IP address of your machine on interface $(IFACE_NAME), check your configuration variable INSTALLER_HOST_NET_INTERFACE and verify your network connection is alive)
endif
endif
endif

INSTALLER_SCRIPT=$(DEVDIR)/installer/$(INSTALLER)/installer

ifeq ($(FORCEINSTALL),yes)
.PHONY: $(INSTALLER_SCRIPT)
endif

$(INSTALLER_SCRIPT) installer : $(DEVDIR)/bsp/mach/bspconfig $(DEVDIR)/installer/$(INSTALLER)/u-boot-installer
	$(V) echo -e "#!/usr/bin/perl" > $(INSTALLER_SCRIPT)
	$(V) echo -e "#This file is autogenerated by makefile, don't modify\n" >> $(INSTALLER_SCRIPT)
	$(V) echo "our \$$DEVDIR = \"$(DEVDIR)\";" >> $(INSTALLER_SCRIPT)
	$(V) echo "our \$$MACH_DESCRIPTION = \"$(MACH_DESCRIPTION)\";" >> $(INSTALLER_SCRIPT)
	$(V) echo "our \$$KERNEL = \"$(KERNEL)\";" >> $(INSTALLER_SCRIPT)
	$(V) echo "our \$$BOOTLOADER = \"$(BOOTLOADER)\";" >> $(INSTALLER_SCRIPT)
	$(V) echo "our \$$IMAGEDIR = \"$(IMAGEDIR)\";" >> $(INSTALLER_SCRIPT)
	$(V) echo "our \$$TFTPIMGSUFFIX = \"$(TFTPIMGSUFFIX)\";" >> $(INSTALLER_SCRIPT)
	$(V) echo "our \$$FORCEINSTALL = \"$(FORCEINSTALL)\";" >> $(INSTALLER_SCRIPT)
	$(V) perl $(DEVDIR)/installer/$(INSTALLER)/bspconfigparser.pl \
	    $(DEVDIR)/bsp/mach/bspconfig \
	    >> $(INSTALLER_SCRIPT)
	$(V) cat $(DEVDIR)/installer/$(INSTALLER)/u-boot-installer >> $(INSTALLER_SCRIPT)
	$(V) chmod +x $(INSTALLER_SCRIPT)

clean::
	$(V) rm -f $(INSTALLER_SCRIPT)

headerinstall: header $(INSTALLER_SCRIPT)
ifeq ($(CONFIG_INSTALLER_SERIAL_METHOD),y)
	$(V) $(ECHO) Installation system of uboot images over serial port $(PORT)
endif
ifeq ($(CONFIG_INSTALLER_TFTP_METHOD),y)
	$(V) if ! [[ $(HOST_IP) =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$$ ]] ; then \
	    $(ECHO) "$(ERROR_COLOR)ERROR:$(NORMAL_COLOR) The detected IP address ($(HOST_IP)) for interface $(IFACE_NAME) isn't a valid IP address, please be sure this is the intended interface that is connected to the board...\n" ; \
	    exit -1 ; \
	fi
	$(V) $(ECHO) Installation system of uboot images over TFTP for host $(HOST_IP)
endif
ifeq ($(CONFIG_INSTALLER_DFU_METHOD),y)
	$(V) $(ECHO) Installation system of uboot images over USB DFU
	$(V) $(ECHO) Please disconnect and reconnect the USB cable from your board
	$(V) $(ECHO) Press return to continue...
	$(V) read
endif
ifeq ($(CONFIG_INSTALLER_SERIAL_COM),y)
	$(V) $(ECHO) Please be sure u-boot is running on port $(PORT) and none process \(like minicom\) is using it 
	$(V) if [ -n "`lsof -t $(PORT)`" ] ; then \
		$(ECHO) "\033[31mError: u-boot $(PORT) port in use\033[0m\n"; \
		lsof $(PORT); \
		exit -1; \
	else \
		$(ECHO) "u-boot port $(PORT)\n"; \
	fi
endif
ifeq ($(CONFIG_INSTALLER_TELNET_COM),y)
	$(V) $(ECHO) "Be sure u-boot is running on $(CONFIG_INSTALLER_TELNET_COM_IP):$(CONFIG_INSTALLER_TELNET_COM_PORT) and no process (like termnet) is using it"
	$(V) $(ECHO) Press return to continue...
	$(V) read
endif

install: headerinstall
	$(V) cd $(DEVDIR)/installer/$(INSTALLER)/ ; perl installer all

installbootloadercheck:
	 $(V)if [ -f  "$(DEVDIR)/bsp/mach/ubootinstaller_notsupported" ] ; then\
	    $(ECHO) "\nThe installbootloader target is not supported on $(MACH_DESCRIPTION)\n";\
	    exit -1; \
	 fi

installbootloader: installbootloadercheck headerinstall
	$(V) cd $(DEVDIR)/installer/$(INSTALLER)/ ; perl installer bootloader

installmtd: headerinstall
	$(V) cd $(DEVDIR)/installer/$(INSTALLER)/ ; perl installer mtd

installkernel: headerinstall
	$(V) cd $(DEVDIR)/installer/$(INSTALLER)/ ; perl installer kernel

installfs: headerinstall
	$(V) cd $(DEVDIR)/installer/$(INSTALLER)/ ; perl installer fs

installcmdline: headerinstall
	$(V) cd $(DEVDIR)/installer/$(INSTALLER)/ ; perl installer cmdline

installbootcmd: headerinstall
	$(V) cd $(DEVDIR)/installer/$(INSTALLER)/ ; perl installer bootcmd

help_targets::
	@echo "   install         - Install all out of date images to target"
	@echo "   installbootloader - Install bootloader to target"
	@echo "   installmtd      - Install uBoot MTD partition table"
	@echo "   installkernel   - Install kernel to target"
	@echo "   installfs       - Install file system to target"
	@echo "   installcmdline  - Install uBoot kernel command line"
	@echo "   installbootcmd  - Install uBoot boot command"

help_parameters::
	@echo ' U-boot Installer Parameters ($$DEVDIR/installer/u-boot-installer)'
	@echo "   PORT            - Host serial port to use for install"
	@echo "   HOST_IP         - Host IP address to use for TFTP install"
	@echo "   FORMAT          - Set to 1 to force SD card to be formatted"
	@echo "   FORCEINSTALL    - Set to yes to force performing the requested install target"
	@echo "   ERASECHIP       - Set to yes if you want to scrub the FLASH chip during bootloader installation"

help_examples::
	@echo "   make installbootloader PORT=/dev/ttyUSB1"
